JavaScript基本觀念

1.副檔名為.js，在cmder運行js檔時，輸入node 檔名.js。
2.在cmder單獨輸入node可直接進入編譯模式，連續按2次ctrl+c可退出。


基本邏輯運算

true：非零的實數、true、部份程式碼等。
false：0、null等。
||(or)：偵測單元是否有true，一旦有true就不管後面單元為何，也不執行該行後面程式碼。
&&(and)：偵測單元是否有false，一旦有true就不管後面單元為何，也不執行該行後面程式碼。
!(not)：不是__的意思，EX. !false = true （不是錯的 = 對的）。


位移運算（二進制位移）

a << b ：a數往左移b個位數，其餘填0，（往左移一個位數代表*2，故往左移b個位數代表*2的b次方）。
	EX.  9 << 2 （十進制的9 = 二進制的1001 ，往右移兩位數 = 100100 ，再轉換成十進制 = 36）
a >> b ：a數往右移b個位數，其餘填0，（往右移一個位數代表/2，故往右移b個位數代表/2的b次方）。
	EX.  8 >> 2 （十進制的8 = 二進制的1000 ，往右移兩位數 = 0010 ，再轉換成十進制 = 2）


位元運算：將十進制轉成二進制後針對每一位元做邏輯運算。
	EX.  8 | 3（十進制）= 1000 | 0011（二進制）= 1011（二進制）= 11（十進制）
	EX.  8 & 3（十進制）= 1000 & 0011（二進制）= 0000（二進制）= 0 （十進制）
	EX.  !8（十進制）= !1000 （二進制）= 0111（二進制）= 7（十進制）
	EX.  8 ^ 3（十進制）= 1000 ^ 0011（二進制）= 1011（二進制）= 11（十進制）
		(^為xor：即相異值回傳1，相同值回傳0)
		

變數型態

Primitive(boolean/number/string)
其他(object/underfined/function)

==和===的差異：===會比較型態（一般建議用===較不會有bug產生）。
物件型態的變數受記憶體位置有關，新增物件時會在不同的記憶體位置，所以兩元素相同的物件會被判斷為不同而出現false。


陣列（array）：有重複性質的資料適合放陣列（EX.var score = [94, 85, 32])

1.陣列頭一個項目為第0個，故score[0] = 94。


物件（object）；用{}將資料合併為一物件，並可以叫出指定資料。
EX.
var abc = {
	name = 'peter' ,
	score = 100 ,
	}

A : B 表示B是名稱為A的物件，可轉換成A['B']。


變數運算：數字+字串會變成字串疊加，故將字串轉數字即可相加。